\chapter{Введение}

\section{Статический анализ кода}

\begin{Def}\label{static_program_analysis}
Статический анализ кода - это анализ программного обеспечения, производимый без реального выполнения исследуемых программ.
\end{Def}

Статический анализ позволяет выявить многие виды ошибок еще до запуска программы, большинство из которых сложно искать и воспроизводить непосредственно во время работы приложения. В связи с этим активно развиваются различные инструменты, позволяющие статически доказывать отсутсвие в программах ошибок тех или иных видов.  

\textit{привести примеры тулов в исторической последовательности}

\section{Неизменяемость в контексте объектно-ориентированного языка}

В различных контекстах понятие неизменяемости может пониматься по-разному. В данной работе я рассматриваю несколько видов неизменяемости:

\begin{Def}\label{immutabule_class}
Неизменяемый класс - класс, все представители которого являются неизменяемыми. 
\end{Def}

Примером неизменяемого класса является, например, java.lang.String.

\begin{Def}\label{immutable_object}
Неизменяемый объект - объект, который не может быть изменен, при этом другие представители того же самого класса могут быть изменены.
\end{Def}
\textit{добавить картинку}
Если в какая-либо система позволяет выражать данное свойство объекта, будем говорить, что в данной системе есть поддержка \it{объектной неизменяемости}.

\begin{Def}\label{reference_immutability}
реизменяемая ссылка - ссылка, которая не может быть использована для изменения объекта, на который она указывает (при этом объект может быть изменен через другую ссылку).
\end{Def} 
\textit{добавить кратинку}
Если какая-либо система позволяет выражать данное свойство объекта, будем говорить, что в данной системе есть поддержка \it{ссылочной неизменяемости}. 

Нужно заметить, что данные понятия не являются чем-то искусственным по отношению к языкам программирования. Приведем примеры использования данных понятий в языке программирования Java.

Например, в документации к классу org.joda.time.Period написано: "Неизменяемый временной период..." \footnote{http://joda-time.sourceforge.net/apidocs/org/joda/time/Period.html}. Таким образом, класс org.joda.time.Period является неизменяемым классом. 
\textit{нужно ли приводить еще примеры}  

\input{prev_work}
